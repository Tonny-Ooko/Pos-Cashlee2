"""Add is_active column

Revision ID: 59a574c0c8a0
Revises: 
Create Date: 2023-10-01 19:20:26.859742

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '59a574c0c8a0'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_info', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_active', sa.Boolean(), nullable=True))
        batch_op.alter_column('role',
               existing_type=mysql.ENUM('Admin', 'Manager', 'User'),
               type_=sa.String(length=50),
               nullable=False,
               existing_server_default=sa.text("'User'"))
        batch_op.create_unique_constraint(None, ['username'])
        batch_op.drop_column('reset_token_expiration')
        batch_op.drop_column('registration_date')
        batch_op.drop_column('email')
        batch_op.drop_column('reset_token')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_info', schema=None) as batch_op:
        batch_op.add_column(sa.Column('reset_token', mysql.VARCHAR(length=255), nullable=True))
        batch_op.add_column(sa.Column('email', mysql.VARCHAR(length=255), nullable=True))
        batch_op.add_column(sa.Column('registration_date', mysql.TIMESTAMP(), server_default=sa.text('current_timestamp()'), nullable=True))
        batch_op.add_column(sa.Column('reset_token_expiration', mysql.DATETIME(), nullable=True))
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('role',
               existing_type=sa.String(length=50),
               type_=mysql.ENUM('Admin', 'Manager', 'User'),
               nullable=True,
               existing_server_default=sa.text("'User'"))
        batch_op.drop_column('is_active')

    # ### end Alembic commands ###
